{"version":3,"sources":["other/API_connection.js","components/Input/Session/logout.js","components/Input/Session/login.js","components/navbar.js","static/img/conquer.jpg","containers/landing.js","components/Stats_Page/Graphs/pie_chart.js","components/Stats_Page/Graphs/line_chart.js","components/Modals/date_picker.js","containers/Loading/LoadingPage.js","other/StatsHandler.js","containers/stats.js","containers/settings.js","components/Input/add_activity_button.js","components/Modals/colorPicker.js","components/Category_Page/color_circle.js","components/Input/delete_button.js","components/Category_Page/category.js","other/sorting.js","components/Category_Page/categories_table.js","components/Category_Page/categories_page.js","containers/categories.js","components/Activity_Page/Card/category_display.js","other/dateHandler.js","components/Activity_Page/Card/activityCard.js","components/Activity_Page/day.js","components/Activity_Page/activityTable.js","components/Modals/category_dropdown.js","components/toast_message.js","components/Activity_Page/activity_component.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","API_Connection","token","refreshToken","this","url_activities","url_categories","url_stats","url_date","url_refresh","logoutUrl","delete_url","categories","undefined","stats","errorFromServer","errorMessage","localStorage","setItem","request","statusText","sendRefreshToken","data","refresh","post","then","res","access","get","headers","date","catch","error","handleError","nb_days","toString","activities","console","log","name","category","minutes_start","minutes_end","dayNumber","date_string","activity_name","activity_category","minutes_after_midnight_start","minutes_after_midnight_end","timeout","activity_id","delete","color","finally","category_id","start_date","end_date","refresh_token","access_token","status","send_logout_to_server","a","getItem","API","post_logout","alert","Logout","response_data","history","useHistory","clientId","buttonText","onLogoutSuccess","push","pathname","render","renderProps","Button","onClick","disabled","variant","size","NavBar","props","Navbar","bg","to","Brand","href","Nav","className","Link","Form","inline","Component","access_url","input_token","json","Login","onSuccess","send_access_token","tokenId","e","state","userid","profileObj","givenName","backend_access_token","backend_refresh_token","refreash_token","onFailure","cookiePolicy","Landing","class","PieChart","pieData","maintainAspectRatio","responsive","labels","datasets","backgroundColor","colors","style","width","float","options","legend","display","position","elements","arc","borderWidth","LineChart","lineData","x_axis","dataset","DatePicker","label","defaultValue","value","onChange","noValidate","TextField","id","type","InputLabelProps","shrink","LoadingPage","Spinner","animation","StatsHandler","stats_data_from_server","serverData","data_obj","parseToDataObj","label_list","parseToLabelList","total_time_list","parseToTotalTime","color_list","parseToColorList","date_list","parseToDateList","data_set","parseToDataSet","JSON","parse","list","key","dataSet","obj_to_fill","date_data","Stats","useState","loading","setLoading","statsHandler","setStatsHandler","Date","routeState","api","connectionCounter","getStats","get_stats","response","AddActivityButton","margin","top","right","bottom","left","outline","Fab","aria-label","handleClick","ColorPicker","defaultColor","ColorCircle","circleStyle","borderRadius","height","DeleteButton","Category","unique_id","delete_category","window","location","reload","onDelete","sort_array_based_on_key","array","sort","b","x","y","Math","abs","parseInt","CategoriesTable","backendAccessToken","api_connection","server_error","server_error_message","items","category_son","Table","hover","render_categories","CategoriesPage","submitHandler","event","post_category","category_name","category_color","setState","handleModalShowHide","sendGetRequest","preventDefault","showHide","error_on_server","error_message_from_server","bind","get_categories","handleServerError","hex","Alert","error_message","Modal","show","centered","Header","closeButton","Title","Body","FormGroup","controlId","Label","Control","placeholder","target","c","onColorSelect","Footer","Activities","CategoryDisplay","position_style","containerStyle","DateHandler","n","hours","rhours","floor","minutes","rminutes","round","strHours","strMinutes","month","values_arr","split","year","month_as_int","day","calc_date","getFullYear","time","time_data","ActivityCard","dateHandler","start_time","timeConvert","end_time","delete_activity","deleteClick","Card","Subtitle","Day","createJSXItems","activities_for_day","activities_array","activity","currentColor","colorList","ActivityTable","day_number_to_view","activities_json","i","length","CreateActivityObject","renderDays","CategoryDropdown","api_data","selected_value","title","prevProps","Dropdown","Item","DropdownButton","onSelect","createSelectItems","ActivityComponent","convertDateToDDMMMMYYYY","activityDate","convertDateToDayNumber","convertTimeToMinutes","activityStartTime","activityEndTime","post_activity","activityName","activityCategory","GET_activities","loading_data_from_api","date_to_view","dayNumber_to_view","stringify","initGet","get_current_date","currentdate","currentDayNumber","daynumber","createColorList","get_activities","GET_date","functionToRetry","eventkey","outerText","onDateChanged","onDropdownSelect","withRouter","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5d26a387.chunk.js","sourcesContent":["const axios = require('axios');\n\nexport default class API_Connection {\n    constructor(token, refreshToken){\n        this.url_activities = \"https://vegsja.pythonanywhere.com/activities/\"\n        this.url_categories = \"https://vegsja.pythonanywhere.com/categories/\"\n        this.url_stats = \"https://vegsja.pythonanywhere.com/stats/\"\n        this.url_date = \"https://vegsja.pythonanywhere.com/date/\"\n        this.url_refresh = \"https://vegsja.pythonanywhere.com/refresh/\"\n        this.logoutUrl = \"https://vegsja.pythonanywhere.com/logout/\"\n        this.delete_url = \"https://vegsja.pythonanywhere.com/delete/\"\n        this.token = token;\n        this.refreshToken = refreshToken;\n\n\n        this.categories = undefined;\n        this.stats = undefined;\n\n        this.errorFromServer = false;\n        this.errorMessage = null;\n\n        //Save to localstorage\n        localStorage.setItem(\"current_token\", this.token)\n        localStorage.setItem(\"refresh_token\", this.refreshToken)\n    }\n\n    handleError(errorMessage){\n        this.errorMessage = errorMessage.request.statusText;\n        this.errorFromServer = true;\n        this.sendRefreshToken()\n        throw this.errorMessage;\n    }\n\n    async sendRefreshToken(){\n        const data = {\n            refresh : this.refreshToken,\n        }\n        const res = await axios.post(this.url_refresh, data, {\n            'Content-Type' : 'text/json'\n        })\n        .then((res) => {\n            this.token = res.data.access;\n            localStorage.setItem('current_token', this.token)\n            this.errorFromServer = false;\n            //this.errorMessage = null;\n        })\n    }\n\n    async get_current_date(){\n        const res = await axios.get(this.url_date, {\n            headers: {\n                \"Authorization\": `Bearer ${this.token}` \n            }\n        })\n        .then((res) => {\n            this.date = res.data;\n            return(this.date)\n        })\n        .catch((error) => {\n            this.handleError(error);\n        })\n    }\n    async get_activities(date, nb_days=2){\n        const res = await axios.get(this.url_activities + \"?date=\"+ date.toString() + \"&nb_days=\" + nb_days.toString(), {\n            headers: {\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n        .then((res) => {\n            this.activities = res.data;\n            console.log(\"Successfully retrieved activities: \", this.activities)\n            return(this.activities);\n        })\n        .catch((error) => {\n            this.handleError(error);\n        })\n    }\n\n    async post_activity(name, category, minutes_start, minutes_end, dayNumber, date_string){\n        const data = {\n            activity_name: name ,\n            activity_category : category,\n            minutes_after_midnight_start: minutes_start,\n            minutes_after_midnight_end: minutes_end,\n            date: dayNumber,\n            date_string: date_string\n        }\n\n            const res = await axios.post(this.url_activities, data, {\n                'Content-Type': 'text/json',\n                headers: {\n                    \"Authorization\": `Bearer ${this.token}`\n                },\n                timeout : 30000,\n            })\n            .then((res) => {\n                console.log(\"Successfully posted data:\", data)\n            })\n            .catch((error) => {\n                console.log(\"Failed to post activity: \", error.request.statusText)\n                this.handleError(error);\n            })\n    }\n\n    async delete_activity(activity_id){\n        const res = await axios.delete(this.url_activities + activity_id + \"/\", {\n            headers: {\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n        .catch((error) => {\n            this.handleError(error)\n        })\n    }\n\n    async post_category(name, color){\n        this.sendRefreshToken()\n        const data = {\n            name: name,\n            color: color\n        }\n        const res = await axios.post(this.url_categories, data, {\n            'Content-Type': 'text/json',\n            headers : {\n                \"Authorization\": `Bearer ${this.token}`\n            },\n            timeout : 30000,\n        })\n        .then((res) =>{\n            console.log(\"Successfully posted data: \", data)\n            return\n        })\n        .catch((error) => {\n            this.handleError(error);\n        })\n        .finally(() => {\n            console.log(\"Everything else failed\")\n        })\n    }\n\n    async get_categories(){\n        const res = await axios.get(this.url_categories, {\n            headers: {\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n        .then((res) => {\n            this.categories = res.data;\n            return(this.categories);\n        })\n        .catch((error) => {\n            this.handleError(error);\n        })\n    }\n\n    async delete_category(category_id){\n        const res = await axios.delete(this.url_categories + category_id + \"/\", {\n            headers: {\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n        .catch((error) => {\n            this.handleError(error)\n        })\n    }\n\n    async get_stats(start_date, end_date){\n        const res = await axios.get(this.url_stats + \"?start_date=\" + start_date + \"&end_date=\" + end_date, {\n            headers: {\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n        .then((res) => {\n            this.stats = res.data;\n            return(this.stats);\n        })\n        .catch((error) => {\n            this.handleError(error);\n        })\n    }\n\n    async post_logout(){\n        const data = {\n            refresh_token : this.refreshToken,\n            access_token : this.token,\n        }\n        const res = await axios.post(this.logoutUrl, data, {\n            'Content-Type' : 'text/json',\n            headers: {\n                \"Authorization\": `Bearer ${this.token}`\n            }\n        })\n        .then((res) => {\n            console.log(\"Successfully logged out of server: \", res.status)\n        })\n        .catch((error) => {\n            this.handleError(error)\n        })\n    }\n}","import React  from 'react';\nimport { GoogleLogout } from 'react-google-login';\nimport { Button } from 'react-bootstrap';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport API_Connection from \"../../../other/API_connection\"\n\nconst axios = require('axios')\n\n\n\nconst clientId = '767187782063-nm6b5i4a6uscq2d9sj8kcfv9taoeej5d.apps.googleusercontent.com';\n\n\n\nasync function send_logout_to_server(){\n    const refresh_token = localStorage.getItem(\"refresh_token\").toString()\n    const token = localStorage.getItem(\"current_token\").toString()\n    var API = new API_Connection(token, refresh_token)\n    API.post_logout()\n    .catch((error) => {\n        API.sendRefreshToken() //We will get an error because accesstoken is no longer valid. Retrieve a new one\n        .then(() => {\n            send_logout_to_server() //If this is successfull then try again\n        })\n        .catch(() => {\n            alert(\"Error on logout:\", error) //Alert error if not\n        })\n    })\n}\n\n//TODO: Send some sort of logout request to backend\nfunction Logout(){\n    let history = useHistory();\n    const onSuccess = (res) => {\n        send_logout_to_server()\n        .then(() => {\n        history.push({\n            pathname: '/landing' });\n        });\n    };\n    return (\n        <div>\n            <GoogleLogout\n                clientId={clientId}\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n                render={renderProps => (\n                    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} variant=\"danger\" size=\"lg\">Log out</Button>\n                )}\n            />\n        </div>\n    );\n}\n\nexport default Logout;","import React  from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport {Button} from 'react-bootstrap';\n\nimport { useHistory } from \"react-router-dom\";\n\n//Using axios for http requests\nconst axios = require('axios');\n\nconst clientId = '767187782063-nm6b5i4a6uscq2d9sj8kcfv9taoeej5d.apps.googleusercontent.com';\n\nvar access_url = \"https://vegsja.pythonanywhere.com/google/\";\n\nvar response_data;\n\n//Function for retrieving a backend token for access when making calls in the future\nasync function send_access_token(input_token) {\n    const json = { token: input_token};\n    const res = await axios.post(access_url, json, {\n        'Content-Type': 'text/json'\n    }).then((res) => res.data);\n\n    response_data = res\n    return res;\n}\n\n\nfunction Login(){\n    \n    let history = useHistory();\n\n    const onSuccess = (res) => {\n        send_access_token(res.tokenId).then(e => { //We wait for the HTTP request to finish before doing anything more...\n            history.push({\n                pathname: '/activities',\n                state: \n                {\n                    userid: res.profileObj.userid,\n                    name: res.profileObj.givenName,\n                    backend_access_token: response_data.access_token,\n                    backend_refresh_token: response_data.refreash_token,\n                }\n            })\n        });\n  \n    };\n\n    const onFailure = (res) => {\n        console.log('[Login failed] res:', res);\n    };\n\n    return (\n        <div>\n            <GoogleLogin\n                clientId={clientId}\n                render={renderProps => (\n                    <Button onClick={renderProps.onClick} disabled={renderProps.disabled} variant=\"primary\" size=\"lg\">Start planning!</Button>\n                )}\n\n                buttonText=\"Login\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={'single_host_origin'}\n            />\n        </div>\n    );\n}\n\nexport default Login;","import React, {Component} from 'react';\n\n//Bootstrap imports\nimport {Nav, Navbar, Form, Button} from 'react-bootstrap';\nimport Logout from './Input/Session/logout';\n\n//Routing imports\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nexport default class NavBar extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <LinkContainer to =\"/activities\">\n                    <Navbar.Brand href=\"#home\">ToSuccess</Navbar.Brand>\n                </LinkContainer>\n                    <Nav className=\"mr-auto\">\n                    <LinkContainer to=\"/activities\">\n                        <Nav.Link>Activities</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/categories\">\n                        <Nav.Link>Categories</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/stats\">\n                        <Nav.Link>Stats</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/settings\">\n                        <Nav.Link>Settings</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n                <Form inline>\n                    <LinkContainer to=\"/landing\">\n                        <Logout />\n                    </LinkContainer>\n                </Form>\n            </Navbar>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/conquer.ece66679.jpg\";","import React from \"react\";\n\nimport {Button} from 'react-bootstrap';\nimport Login from '../components/Input/Session/login.js';\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\n\nimport conquer from '../static/img/conquer.jpg';\n\nimport '../style/activity_page.css';\nimport '../style/landing.css';\n\n\n\nexport default function Landing(){\n    console.log(\"Langing page\")\n    return(\n            <div className=\"page-contain\" class=\"backgroundDiv\">\n                <div className=\"content-left\">\n                    <h1 class=\"landingPage\">Achieve it!</h1>\n                    <p> The daily planner which structures your day in a revolutinary way</p>\n                    <LinkContainer to=\"/activities\">\n                        <Login />\n                    </LinkContainer>\n                </div>\n            </div>\n    );\n}","import {React, Component} from \"react\"\nimport { Doughnut } from 'react-chartjs-2'\n\n\n\n\nconst PieChart = (props) => {\n    const pieOptions = {\n        legend: {\n          display: false,\n          position: \"left\",\n        },\n        elements: {\n          arc: {\n            borderWidth: 0\n          }\n        }\n    };\n\n    const pieData = {\n        maintainAspectRatio: false,\n        responsive: false,\n        labels: props.labels,\n        datasets: [\n          {\n            data: props.data,\n            backgroundColor : props.colors,\n          }\n        ]\n    }\n\n    const divStyle = {\n      width : \"50%\",\n      float : \"right\",\n    }\n    return (\n        <div style={divStyle}>\n            <Doughnut\n                data={pieData}\n                options={pieOptions}\n            />\n        </div>\n    )\n}\n\nexport default PieChart","import { React } from \"react\"\nimport { Line } from 'react-chartjs-2'\n\nconst LineChart = (props) => {\n    const lineOptions = {\n        legend: {\n            display: false,\n            position: \"left\",\n          },\n          elements: {\n            arc: {\n              borderWidth: 0\n            }\n          },\n    }\n\n    const lineData = {\n        labels: props.x_axis,\n        datasets : props.dataset,\n    }\n\n    const divStyle = {\n        width : \"50%\",\n        display : \"left\",\n    }\n\n    return (\n        <div style={divStyle}>\n            <Line \n                data={lineData}\n            />\n        </div>\n    )\n}\n\nexport default LineChart","import {React, Component} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class DatePicker extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            label : this.props.label,\n            defaultValue : this.props.value,\n            onChange : this.props.onChange,\n        }\n    }\n\n    render(){\n        return(\n            <form noValidate>\n                <TextField\n                    id=\"date\"\n                    label={this.state.label}\n                    type=\"date\"\n                    defaultValue={this.state.defaultValue}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    onChange={this.state.onChange}\n                />\n            </form>\n        )\n    }\n}","import {React, Component} from \"react\"\n\nimport {Spinner} from \"react-bootstrap\"\n\nexport default class LoadingPage extends Component{\n    render(){\n        return(\n            <div>\n                <Spinner animation=\"grow\" className=\"loading-table\" />\n            </div>\n        )\n    }\n}","export default class StatsHandler{\n    constructor(stats_data_from_server){\n        this.serverData = stats_data_from_server\n        this.data_obj = this.parseToDataObj()\n        this.label_list = this.parseToLabelList()\n        this.total_time_list = this.parseToTotalTime()\n        this.color_list = this.parseToColorList()\n\n        //For line chart\n        this.date_list = this.parseToDateList()\n        this.data_set = this.parseToDataSet()\n\n        console.log(this.data_set)\n    }\n\n    parseToDataObj(){\n        return(JSON.parse(this.serverData[0].data))\n    }\n\n    parseToLabelList(){\n        var list = []\n        for(var key in this.data_obj){\n            list.push(key)\n        }\n        return list\n    }\n\n    parseToTotalTime(){\n        var list = []\n        for(var key in this.data_obj){\n            list.push(this.data_obj[key][\"total_time\"])\n        }\n        return list\n    }\n\n    parseToColorList(){\n        var list = []\n        for(var key in this.data_obj){\n            list.push(this.data_obj[key][\"color\"])\n        }\n        return list\n    }\n\n    parseToDateList(){\n        var list = []\n        for(var key in this.data_obj[this.label_list[0]][\"date_data\"]){ //Will take the first object since every category will have the same dates\n            list.push(key)\n        }\n        return list\n    }\n\n    parseToDataSet(){\n        var dataSet = []\n        for(var key in this.data_obj){\n            var data = []\n            var obj_to_fill = {}\n\n            obj_to_fill[\"label\"] = key\n            \n            for(var date_data in this.data_obj[key][\"date_data\"]){\n                data.push(this.data_obj[key][\"date_data\"][date_data])\n            }\n            obj_to_fill[\"data\"] = data\n            obj_to_fill[\"fill\"] = false\n            obj_to_fill[\"borderColor\"] = this.data_obj[key][\"color\"]\n\n            \n\n            dataSet.push(obj_to_fill)\n        }\n        return dataSet\n\n    }\n}","import React, {useState} from \"react\";\nimport PieChart from \"../components/Stats_Page/Graphs/pie_chart\";\nimport LineChart from \"../components/Stats_Page/Graphs/line_chart\";\n\nimport DatePicker from \"../components/Modals/date_picker\";\n\nimport LoadingPage from \"./Loading/LoadingPage\"\n\nimport API_Connection from '../other/API_connection'\nimport StatsHandler from '../other/StatsHandler'\n\n\nexport default function Stats(){  \n    //Using hooks to manage states\n    const [loading, setLoading] = useState(true);\n    const [statsHandler, setStatsHandler] = useState(null);\n\n    //For date picker\n    const [start_date_to_view, setStartDate] = useState(new Date());\n    const [end_date_to_view, setEndDate] = useState(new Date()); \n\n\n\n    var routeState = localStorage.getItem(\"routeState\");\n    if(routeState) routeState = JSON.parse(routeState);\n\n    var backend_access_token = routeState.backend_access_token\n    var backend_refresh_token = routeState.backend_refresh_token\n\n    var api = new API_Connection(backend_access_token, backend_refresh_token)\n\n    var data_list = []\n\n    var connectionCounter = 0\n\n\n    const GET_date = () => {\n        api.get_current_date()\n        .then((response) => {\n            setStartDate((api.date.daynumber-7)%365)\n            setEndDate(api.date.daynumber)\n            getStats()\n        })\n        .catch(()=> {\n            GET_date()\n        });\n    }\n\n    const getStats = () => {\n        \n        api.get_stats(10, 17)\n        .then((response) => {\n            setStatsHandler(new StatsHandler(api.stats))\n            setLoading(false)\n        })\n        .catch((error) => {\n            console.log(\"Caught error:\", error)\n            api.sendRefreshToken()\n            .then(()=>{\n                connectionCounter += 1\n                if (connectionCounter < 2){\n                    getStats()\n                }\n            })\n        })\n    }\n\n    const onStartDateChanged = (e) => {\n        setStartDate(e.target.value)\n    }\n\n    const onEndDateChanged = (e) => {\n        setEndDate(e.target.value)\n    }\n\n    if(statsHandler === null){\n        getStats()\n    }\n\n    if(loading === true){\n        return(\n            <div>\n                <LoadingPage />\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>\n                <h1>Stats</h1>\n                <PieChart labels={statsHandler.label_list} data={statsHandler.total_time_list} colors={statsHandler.color_list}/>\n                <LineChart x_axis={statsHandler.date_list} dataset={statsHandler.data_set}/>\n            </div>\n        );\n    }\n}","import React from \"react\";\n\n\nexport default function Stats(){\n    return(\n        <h1>Settings</h1>\n    );\n}","import {React, Component} from 'react';\n\nimport {Button, Link, Container} from \"react-floating-action-button\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport default class AddActivityButton extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    style = {\n        margin: 0,\n        top: 'auto',\n        right: 20,\n        bottom: 20,\n        left: 'auto',\n        position: 'fixed',\n        outline: \"none\"\n    };\n\n    render(){\n        return (\n            <Fab color=\"primary\" aria-label=\"add\" style={this.style} onClick={this.props.handleClick}>\n                <AddIcon />\n            </Fab>\n          );\n    }\n}","import {React, Component} from 'react'\n\nimport { CirclePicker } from 'react-color'\n\nexport default class ColorPicker extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            color : this.props.defaultColor,\n        }\n    }\n\n    render(){\n        return(\n            <CirclePicker\n                color={this.state.defaultColor}\n                onChange={ this.props.onChange }\n            />\n        )\n    }\n}","import { React, Component} from \"react\"\n\nexport default class ColorCircle extends Component{\n    constructor(props){\n        super(props);\n        this.circleStyle = {\n            margin: \"1vh\",\n            display:\"inline-block\",\n            position:'relative',\n            backgroundColor: this.props.color,\n            borderRadius: \"50%\",\n            width: this.props.size,\n            height: this.props.size,\n            left:0,\n            top:0,\n        }\n    }\n\n    render(){\n        return(\n            <div style={this.circleStyle} />\n        )\n    }\n}","import { Autorenew } from '@material-ui/icons'\nimport {React, Component} from 'react'\n\nimport {Button} from 'react-bootstrap'\n\nexport default class DeleteButton extends Component {\n    render(){\n        const style = {\n            margin:\"auto\",\n            position: this.props.position,\n            right: \"1%\",\n            top:\"5%\"\n        }\n\n        return(\n            <div>\n                <Button style={style} onClick={this.props.onClick}>Delete</Button>\n            </div>\n        )\n    }\n}","import {React, Component} from 'react'\n\nimport ColorCircle from './color_circle'\nimport DeleteButton from '../Input/delete_button'\n\nexport default class Category extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            color : this.props.color,\n            name : this.props.name,\n            unique_id : this.props.unique_id,\n        }\n        this.api = this.props.api\n    }\n\n    onDelete(){\n        this.api.delete_category(this.state.unique_id)\n        .then(() => {\n            //Refresh\n            window.location.reload();\n        })\n        .catch(() => {\n            this.api.sendRefreshToken()\n            .then(() => {\n                this.onDelete()\n            })\n        })\n    }\n\n    render(){\n        return(\n            <tr>\n                <th><ColorCircle color={this.state.color} size={\"5vh\"}/></th>\n                <th><h3>{this.state.name}</h3></th>\n                <th><DeleteButton onClick={() => this.onDelete()} position=\"relative\"/></th>\n            </tr>\n        )\n    }\n}","export default function sort_array_based_on_key(array, key){\n    var sorted =  array.sort( function(a,b) {\n        var x = a[key];\n        var y = b[key];\n        if (Math.abs(parseInt(x)-parseInt(y)) > 10 && key==\"date\"){\n            return\n        }\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n    });\n    return sorted\n}","import { React, Component } from 'react' \nimport { Table} from 'react-bootstrap'\n\nimport Category from './category'\nimport sort_array_based_on_key from '../../other/sorting'\n\nexport default class CategoriesTable extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            loading: true,\n            backend_access_token : this.props.backendAccessToken,\n            api_connection : this.props.api_connection,\n\n            server_error : false,\n            server_error_message : null,\n            categories : sort_array_based_on_key(this.props.categories, \"name\"),\n        }\n    }\n\n    render_categories(){\n        var items = []\n        for(var categories in this.state.categories){\n            var category_son = this.state.categories[categories]\n            items.push(<Category color={category_son.color} name={category_son.name} unique_id={category_son.unique_id} api={this.state.api_connection}/>)\n        }\n        return items\n    }\n\n    render(){\n        return(\n            <Table hover>\n                <thead>\n                </thead>\n                <tbody>\n                        {this.render_categories()}\n                </tbody>\n            </Table>\n        )\n    }\n}","import {React, Component} from \"react\";\nimport { Redirect } from 'react-router'\n\nimport AddActivityButton from \"../Input/add_activity_button\"\nimport ColorPicker from \"../Modals/colorPicker\"\nimport CategoriesTable from \"./categories_table\"\n\nimport LoadingPage from \"../../containers/Loading/LoadingPage\"\n\nimport {Button, Modal, Form, FormGroup, Alert} from 'react-bootstrap';\n\nimport API_Connection from '../../other/API_connection'\n\n\nexport default class CategoriesPage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            showHide : false,\n\n            category_name : null,\n            category_color : \"#FFFFFFF\",\n\n            backend_access_token : null,\n            backend_refresh_token : null,\n\n            error_on_server : false,\n            error_message_from_server : null,\n\n            categories : null,\n\n            loading : true,\n        }\n        var routeState = localStorage.getItem(\"routeState\");\n        if(routeState) routeState = JSON.parse(routeState);\n        this.state.backend_access_token = routeState.backend_access_token\n        this.state.backend_refresh_token = routeState.backend_refresh_token\n        this.API = new API_Connection(this.state.backend_access_token, this.state.backend_refresh_token)\n\n        //Bind \"this\" keyword for use in onClick\n        this.submitHandler = this.submitHandler.bind(this)\n    }\n\n\n    componentDidMount(){\n        this.sendGetRequest()\n    }\n\n    sendGetRequest(){\n        this.API.get_categories()\n        .then((response) => {\n            //console.log(\"Get was successfull changing this.categories\")\n            this.state.categories = this.API.categories;\n            this.setState({ loading: false });\n        })\n        .catch((response) => {\n            this.API.sendRefreshToken() //Send refresh token\n            .then((response) => {\n                this.sendGetRequest() //If successfully retrieved token. Try again\n            })\n            .catch((error) => {\n                this.handleServerError(error.request.statusText) //If not display error\n            })\n        })\n    }\n\n    \n    handleServerError(error){\n        this.setState({ error_on_server : true, error_message_from_server : error })\n    }\n\n    handleModalShowHide(){\n        this.API.sendRefreshToken()\n        this.setState({ showHide : !this.state.showHide })\n    }\n\n    onColorSelect(color, event){\n        this.setState({ category_color : color.hex })\n    }\n\n    submitHandler = event => {\n        this.API.post_category(this.state.category_name, this.state.category_color)\n        .then((response) => {\n            console.log(\"Success:\", response)\n            this.setState({ loading : true })\n            this.handleModalShowHide()\n            this.sendGetRequest()\n            return\n        })\n        .catch(() => {\n            this.API.sendRefreshToken() //If not successfull, send refresh token and get new access token\n            .then(() => {\n                this.submitHandler()\n                return\n            })\n            .catch(() => {\n                return\n            })\n        })\n        event.preventDefault() //Leave this to hinder reload, which inturn will fix post on start \n    }\n\n    render(){\n        if(this.state.loading){\n            if(this.state.error_on_server){\n                if(this.state.error_message_from_server === \"Unauthorized\"){\n                    return(<div><Redirect to=\"/landing\" /></div>)\n                }\n                else{\n                    return(\n                        <Alert variant=\"danger\">\n                            Server error: {this.state.error_message}\n                        </Alert>)\n                }\n            }\n            return(<LoadingPage />)\n        }\n        return(\n            <div>\n                <h1>Categories</h1>\n                <CategoriesTable backendAccessToken={this.state.backend_access_token} api_connection={this.API} categories={this.state.categories}/>\n                <AddActivityButton handleClick={() => this.handleModalShowHide()} />\n\n                            {/* Modal */}\n                            {/*TODO: Is there a way to place the modal inside a component? */}\n                            <Modal show={this.state.showHide} centered>\n                                <Modal.Header closeButton onClick={() => this.handleModalShowHide()}>\n                                <Modal.Title>Add category</Modal.Title>\n                                </Modal.Header>\n                                <Form>\n                                    <Modal.Body>\n                                        <FormGroup controlId=\"formCategoryName\">\n                                            <Form.Label>Category name:</Form.Label>\n                                            <Form.Control type=\"string\" placeholder=\"Enter category name...\" onChange={e => this.setState({ category_name: e.target.value })}/>\n                                        </FormGroup>\n                                        <FormGroup controlId=\"formColor\">\n                                            <Form.Label>Category Color:</Form.Label>\n                                            <ColorPicker color={'#FFFFFF'} onChange={(c,e) => this.onColorSelect(c,e)} />\n                                        </FormGroup>\n                                    </Modal.Body>\n                                    <Modal.Footer>   \n                                        <Button variant=\"secondary\" onClick={() => this.handleModalShowHide()}>\n                                            Close\n                                        </Button>\n                                        <Button variant=\"primary\" type=\"submit\" onClick={this.submitHandler}>\n                                            Add Category\n                                        </Button>\n                                    </Modal.Footer>\n                                </Form>\n                            </Modal>\n                </div>\n    );}\n}","import React from \"react\";\n\nimport CategoriesPage from '../components/Category_Page/categories_page';\n\nimport '../style/activity_page.css';\n\n\nexport default function Activities(){\n\n    //Had to call this as a component to manage the modal. Might be a fix but can't be bothered to figure out now\n    return(\n        <div>\n            <CategoriesPage />\n        </div>\n    );\n}","import {React, Component} from 'react'\n\nimport ColorCircle from '../../Category_Page/color_circle'\n\nexport default class CategoryDisplay extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            category : this.props.category,\n            color : this.props.color,\n            position_style : this.props.position_style\n        }\n    }\n    render(){\n        const containerStyle = {\n            width : \"fit-content\",\n            borderRadius:\"10%\",\n            backgroundColor: this.state.color,\n            position: this.state.position_style,\n\n        }\n        return(\n            <div style={containerStyle}>\n                <p style={{margin : \"5px\", color : \"white\", \"font-size\" : \"1vw\"}}>\n                    {this.state.category}\n                </p>\n            </div>\n        )\n    }\n}","export default class DateHandler{\n\n    timeConvert(n) {\n        var num = n;\n        var hours = (num / 60);\n        var rhours = Math.floor(hours);\n        var minutes = (hours - rhours) * 60;\n        var rminutes = Math.round(minutes);\n        if (rhours < 10){\n            var strHours = \"0\" + rhours;\n        }\n        else{\n            var strHours = rhours;\n        }\n\n        if (rminutes < 10){\n            var strMinutes = \"0\" + rminutes;\n        }\n        else{\n            var strMinutes = rminutes;\n        }\n\n        return strHours + \":\" + strMinutes\n    }\n\n    convertDateToDDMMMMYYYY(date_string){\n        var values_arr = date_string.split(\"-\");\n        var year = values_arr[0]\n        var month_as_int = parseInt(values_arr[1]);\n        var day = values_arr[2]\n        let month\n        //Convert to correct month\n        switch(month_as_int) {\n            case 1:\n                month = \"January\"\n                break;\n            case 2:\n                month = \"February\"\n                break;\n            case 3:\n                month = \"March\"\n                break;\n            case 4:\n                month = \"April\"\n                break;\n            case 5:\n                month = \"May\"\n                break;\n            case 6:\n                month = \"June\"\n                break;\n            case 7:\n                month = \"July\"\n                break;\n            case 8:\n                month = \"August\"\n                break;\n            case 9:\n                month = \"September\"\n                break;\n            case 10:\n                month = \"October\"\n                break;\n            case 11:\n                month = \"November\"\n                break;\n            case 12:\n                month = \"December\"\n                break;\n        }\n        return day + \". \" + month + \" \" + year;\n    }\n\n    convertDateToDayNumber(date){\n        var date_data = date.split('-')\n        var day = parseInt(date_data[2]); \n        var month = parseInt(date_data[1]);\n        var year = parseInt(date_data[0]);\n\n        var calc_date = new Date(year, month-1, day);\n        var start_date = new Date(calc_date.getFullYear(), 0, 0)\n\n        var dayNumber = Math.floor((calc_date - start_date) / 1000 / 60 / 60 / 24);\n        return dayNumber;\n    }\n\n    convertTimeToMinutes(time){\n        var time_data = time.split(\":\")\n        var hours = parseInt(time_data[0]);\n        var minutes = parseInt(time_data[1]);\n        return hours*60 + minutes\n    }\n}","import {React, Component} from 'react';\n\n//Bootstrap imports\nimport {Card} from 'react-bootstrap';\n\nimport CategoryDisplay from './category_display'\nimport DeleteButton from '../../Input/delete_button'\n\n//Other imports\nimport DateHandler from '../../../other/dateHandler';\n\n\nexport default class ActivityCard extends Component{\n    constructor(props){\n        super(props);\n        const dateHandler = new DateHandler();\n        this.start_time = dateHandler.timeConvert(this.props.start_time)\n        this.end_time = dateHandler.timeConvert(this.props.end_time)\n        this.unique_id = this.props.unique_id;\n        this.api = this.props.api\n\n    }\n\n    deleteClick(){\n        this.api.delete_activity(this.unique_id)\n        .then(() => {\n            console.log(\"Deleted\", this.props.activity_name)\n            window.location.reload();\n        })\n        .catch((error) => {\n            console.log(\"caught error\", error)\n            this.api.sendRefreshToken()\n            .then(() => {\n                this.deleteClick()\n            })\n            .catch(() => {\n                return\n            })\n        })\n    }\n    render(){\n        return(\n            <Card className=\"activity-card\">\n            <Card.Body>\n                <Card.Title>\n                    <CategoryDisplay category={this.props.activity_category} color={this.props.color} position_style=\"absolute\"/>\n                        {this.start_time} - {this.end_time}\n                    <DeleteButton onClick={() => this.deleteClick()} position=\"absolute\"/>\n                </Card.Title>\n                <Card.Subtitle className=\"activity-name\">{this.props.activity_name}</Card.Subtitle>\n            </Card.Body>\n            </Card>\n        )\n    }\n}","import {React, Component} from 'react'\n\nimport {Table} from 'react-bootstrap';\n\nimport ActivityCard from './Card/activityCard';\nimport sort_array_based_on_key from '../../other/sorting'\n\nexport default class Day extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <Table>\n            <thead>\n                <th>{this.props.date}</th>\n            </thead>\n            <tbody>\n                {this.createJSXItems(this.props.activities_for_day)}\n            </tbody>\n        </Table>\n        )\n    }\n\n    //Creates the JSX items used to populate the table from the object created in CreateActivityObject function\n    createJSXItems(activities_array){\n        activities_array = sort_array_based_on_key(activities_array, \"minutes_after_midnight_start\")\n        const items = []\n        for(const activity of activities_array){\n            var category = activity.activity_category\n            var currentColor = this.props.colorList[category]\n            items.push(<tr><ActivityCard api={this.props.api} activity_name={activity.activity_name} activity_category={category} color={currentColor} start_time={activity.minutes_after_midnight_start} end_time={activity.minutes_after_midnight_end} unique_id={activity.unique_id} /> </tr>);\n        }\n        return items;\n    }\n\n    //TODO: Sort start time on the different activities before creating\n}","import {React, Component} from 'react';\n\n//Bootstrap imports\nimport {Table, Spinner, Alert} from 'react-bootstrap';\n\nimport Day from './day';\n\n\n\n\n//Non-react classes\nimport sort_array_based_on_key from \"../../other/sorting\"\nimport DateHandler from \"../../other/dateHandler\"\n\nimport \"../../style/activity_page.css\"\n\n//TODO : Figure out why this doesnt rerender\nexport default class ActivityTable extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            loading: true,\n            backend_access_token : this.props.backendAccessToken,\n            api_connection : this.props.api_connection,\n            day_number_to_view : this.props.day_number_to_view,\n\n            colorList : this.props.colorList,\n\n            activities : sort_array_based_on_key(this.props.activities, \"date\"),\n        }   \n        this.dateHandler = new DateHandler();\n    }\n\n    //Creates 'dict' with data from JSON\n    CreateActivityObject(activities_json){\n        var activities = {};\n        for(var i=0; i<activities_json.length; i++){\n            if (!(activities_json[i].date_string in activities)){\n                activities[activities_json[i].date_string] = [];\n            }\n            activities[activities_json[i].date_string].push(activities_json[i]);\n        }\n        return activities;\n    }\n\n    //Use create a activity card based on data from object\n    renderDays(){\n        var activities = this.CreateActivityObject(this.state.activities);\n        var items = [];\n        for(const key in activities){\n            items.push(<th><Day date={key} activities_for_day={activities[key]} colorList={this.state.colorList} api={this.props.api}/></th>);\n        }\n        if (items.length == 0){\n            return (<Alert variant='warning'>ALERT: No activities found for these days. To add an activity click the add button</Alert>)\n        }\n        return items;\n    }\n\n    render(){\n        return(\n            <div className=\"table-div\">\n                <Table> {this.renderDays()} </Table>\n            </div>\n        )\n    }\n}","import { React, Component} from 'react'\n\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\n\nimport ColorCircle from '../Category_Page/color_circle'\nimport CategoryDisplay from '../Activity_Page/Card/category_display'\n\nexport default class CategoryDropdown extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            api_data : this.props.data,\n            selected_value : null,\n            title : this.props.title,\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.title !== this.props.title){\n            this.setState({title : this.props.title})\n        }\n    }\n\n    createSelectItems(){\n        var items = []\n        for(var key in this.state.api_data){\n            var category_name = this.state.api_data[key].name\n            var category_color = this.state.api_data[key].color\n            items.push(\n            <Dropdown.Item>\n                {/* <ColorCircle color={category_color} size=\"2vh\"/>\n                {category_name} */}\n                <CategoryDisplay category={category_name} color={category_color} position_style=\"relative\"/>\n            </Dropdown.Item>)\n        }\n        return items\n    }\n\n    render(){\n        if (this.state.title === \"\"){\n            return(\n                <DropdownButton style={{ position : \"relative\", display : \"inline-block\"}} title=\"Category\" onSelect={this.props.onSelect}>\n                    {this.createSelectItems()}\n                </DropdownButton>\n            )\n        }\n        else {\n            return(\n                <DropdownButton style={{ position : \"relative\", display : \"inline-block\"}} title={this.state.title} onSelect={this.props.onSelect}>\n                    {this.createSelectItems()}\n                </DropdownButton>\n            )\n        }\n\n    }\n}","import {React, Component} from 'react'\n\nimport { Toast } from 'react-bootstrap'\n\nexport default class ToastMessage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            message : this.props.message,\n        }\n    }\n    render(){\n        return(\n            <Toast>\n                <Toast.Header>\n                    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n                    <strong className=\"mr-auto\">Tosuccess</strong>\n                </Toast.Header>\n                <Toast.Body>{this.state.message}</Toast.Body>\n            </Toast>\n        );\n    }\n}","//Components\nimport ActivityTable from './activityTable';\nimport AddActivityButton from '../Input/add_activity_button';\nimport DatePicker from \"../Modals/date_picker\"\nimport CategoryDropdown from \"../Modals/category_dropdown\"\nimport ToastMessage from '../toast_message'\nimport LoadingPage from \"../../containers/Loading/LoadingPage\"\n\nimport {Button, Modal, Form, Alert} from 'react-bootstrap';\n\nimport {React, Component, createContext} from 'react';\nimport { FormGroup } from '@material-ui/core';\n\n//Routing\nimport { withRouter, Redirect } from \"react-router\";\n\n//Non-react classes\nimport API_Connection from \"../../other/API_connection\"\nimport DateHandler from \"../../other/dateHandler\"\n\n//TODO: Change format of date so that backends accepts\nclass ActivityComponent extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            activityName : \"\",\n            activityCategory : \"\",\n            activityDate : \"\",\n            activityStartTime : \"\",\n            activityEndTime : \"\",\n            showHide : false,\n\n            loading_data_from_api : true,\n            backend_access_token: null,\n            backend_refresh_token: null,\n\n            server_error : false,\n            error_message : null,\n\n            date_to_view : new Date(),\n            dayNumber_to_view : null,\n\n            activities : null,\n\n            colorList : {},\n        }\n\n        let routeState;\n        if(this.props.location.state){\n            localStorage.setItem('routeState', JSON.stringify(this.props.location.state));\n            routeState = this.props.location.state;\n        } else {\n            routeState = localStorage.getItem('routeState');\n            if(routeState) routeState = JSON.parse(routeState);\n        }\n        this.state.backend_access_token = routeState.backend_access_token; //Does this to avoid update of page\n        this.state.backend_refresh_token = routeState.backend_refresh_token;\n\n\n        //Need to bind \"this\"\n        this.submitHandler = this.submitHandler.bind(this)\n\n        this.api_connection = new API_Connection(this.state.backend_access_token, this.state.backend_refresh_token); //We still keep this object and pass it into the table. Still need it to post\n        localStorage.setItem('api', this.api_connection)\n        this.dateHandler = new DateHandler();\n    }\n\n    componentDidMount(){\n        this.initGet()\n    }\n\n\n//TODO : Make a more elegant sulution here.... (Try to use the functions)\n//------------------Server stuff----------------------------------------------\n    initGet(){\n        this.api_connection.get_current_date()\n        .then((response) => {\n            this.currentdate = this.api_connection.date.date;\n            this.currentDayNumber = this.api_connection.date.daynumber;\n            this.setState({date_to_view : this.currentdate, dayNumber_to_view : this.currentDayNumber})\n            this.api_connection.get_categories().then((res) => {\n                this.categories = this.api_connection.categories;\n                this.setState({ colorList : this.createColorList(this.categories) })\n                this.api_connection.get_activities(this.state.dayNumber_to_view, 4)\n                .then((response) => {\n                    this.setState({ activities : this.api_connection.activities, loading_data_from_api : false})\n                });\n            });\n        })\n        .catch(() => {\n            this.api_connection.sendRefreshToken()\n            .then(() => {\n                this.initGet()\n            })\n            .catch(() => {\n                this.setState({ server_error : true, error_message : this.api_connection.errorMessage });\n            })\n        })\n    }\n\n    GET_date(){\n        this.api_connection.get_current_date()\n        .then((response) => {\n            this.currentdate = this.api_connection.date.date;\n            this.currentDayNumber = this.api_connection.date.daynumber;\n            this.setState({date_to_view : this.currentdate, dayNumber_to_view : this.currentDayNumber})\n        })\n        .catch(()=> {\n            this.handleServerError(this.GET_date)\n        });\n    }\n\n    async GET_categories(){\n        this.api_connection.get_categories().then((res) => {\n            this.categories = this.api_connection.categories;\n            this.setState({ colorList : this.createColorList(this.categories) })\n            return res\n        });\n    }\n\n    async GET_activities(){\n        this.setState({ loading_data_from_api : true })\n        this.api_connection.get_activities(this.state.dayNumber_to_view, 4)\n        .then((response) => {\n            this.setState({ activities : this.api_connection.activities, loading_data_from_api : false})\n        })\n        .catch(() => {\n            this.api_connection.sendRefreshToken()\n            .then(() => {\n                this.GET_activities()\n            })\n            .catch(() => {\n                console.log(\"Internal server error\")\n            })\n        });\n    }\n\n    async handleServerError(functionToRetry){\n        this.api_connection.sendRefreshToken()\n        .then(() => {\n            functionToRetry()\n        })\n        .catch(() => {\n            this.setState({ server_error : true, error_message : this.api_connection.errorMessage });\n        })\n\n    }\n\n    //Handle input in fab\n    handleModalShowHide() {\n        this.setState({ showHide: !this.state.showHide, activityCategory : \"\" })\n    }\n\n    onDropdownSelect(eventkey, event){\n        this.setState({activityCategory : event.target.outerText});\n    }\n\n    onDateChanged(event){\n        this.state.date_to_view = event.target.value\n        this.state.dayNumber_to_view = this.dateHandler.convertDateToDayNumber(event.target.value)\n        this.GET_activities()\n    }\n\n    submitHandler = event => {\n        //This is where you handle the input given. The previous functions should have changed the states to reflect the value inputed. Just use this.state.activityName for instance\n        var date = this.dateHandler.convertDateToDDMMMMYYYY(this.state.activityDate);\n        var dayNumber = this.dateHandler.convertDateToDayNumber(this.state.activityDate);\n        var start_time = this.dateHandler.convertTimeToMinutes(this.state.activityStartTime);\n        var end_time = this.dateHandler.convertTimeToMinutes(this.state.activityEndTime);\n        this.api_connection.post_activity(this.state.activityName, this.state.activityCategory, start_time, end_time, dayNumber, date)\n        .then(() => {\n            this.GET_activities()\n            .then(() => {\n                this.handleModalShowHide();\n            })\n        })\n        .catch(() => {\n            this.api_connection.sendRefreshToken()//Get new access token\n            .then(() => {\n                this.submitHandler() //Try again\n            })\n            .catch(() => {\n            })\n        });\n\n        event.preventDefault() //Leave this to hinder reload, which inturn will fix post on start \n    }\n\n    createColorList(categories){\n        var colorList = {}\n        for(var key in categories){\n            colorList[categories[key].name] = categories[key].color;\n        }\n        return colorList\n    }\n\n    render(){\n        if (this.state.loading_data_from_api){\n            if(this.state.server_error){\n                if(this.state.error_message === \"Unauthorized\"){\n                    return(<div><Redirect to=\"/landing\" /></div>)\n                }\n                else{\n                    return(\n                        <Alert variant=\"danger\">\n                            Server error: {this.state.error_message}\n                        </Alert>)\n                }\n            }\n            return(\n                <LoadingPage />\n            )\n        }\n        else{\n            return(\n                <div>\n                    <h1>Here are your activities for the next 4 days!</h1>\n                    <DatePicker value={this.state.date_to_view} label=\"Date:\" onChange={(e) => this.onDateChanged(e)}/>\n                    {/* The rest of the page */}\n                    <ActivityTable api={this.api_connection} activities={this.state.activities} backendAccessToken={this.state.backend_access_token} day_number_to_view={this.state.dayNumber_to_view} colorList={this.state.colorList}/>\n                    <AddActivityButton handleClick={() => this.handleModalShowHide()} />\n\n                    {/* Modal */}\n                    {/*TODO: Is there a way to place the modal inside a component? */}\n                    <Modal show={this.state.showHide} centered>\n                        <Modal.Header closeButton onClick={() => this.handleModalShowHide()}>\n                        <Modal.Title>Add activity</Modal.Title>\n                        </Modal.Header>\n                        <Form>\n                            <Modal.Body>\n                                <FormGroup controlId=\"formActivityName\">\n                                    <Form.Label>Activity Name:</Form.Label>\n                                    <Form.Control type=\"string\" placeholder=\"Enter activity name...\" style={{width : \"fit-content\", display : \"inline-block\"}} onChange={e => this.setState({ activityName: e.target.value })}/>\n                                    <CategoryDropdown data={this.categories} onSelect={(key, event) => this.onDropdownSelect(key, event)} title={this.state.activityCategory}/>\n                                </FormGroup>\n                                <FormGroup controlId=\"formDate\">\n                                    <Form.Label>Date:</Form.Label>\n                                    <Form.Control type=\"date\" onChange={e => this.setState({ activityDate: e.target.value })} />\n                                </FormGroup>\n                                <FormGroup controlId=\"formStartTime\">\n                                    <Form.Label>Start Time:</Form.Label>\n                                    <Form.Control type=\"time\" onChange={e => this.setState({ activityStartTime: e.target.value })} />\n                                </FormGroup>\n                                <FormGroup controlId=\"formEndTime\">\n                                    <Form.Label>End Time:</Form.Label>\n                                    <Form.Control type=\"time\" onChange={e => this.setState({ activityEndTime: e.target.value })} />\n                                </FormGroup>\n                            </Modal.Body>\n                            <Modal.Footer>   \n                                <Button variant=\"secondary\" onClick={() => this.handleModalShowHide()}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" type=\"submit\" onClick={this.submitHandler}>\n                                    Add Activity\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n                    </Modal>\n                </div>\n            )\n        }\n    }\n    \n}\n\nexport default withRouter(ActivityComponent);\n","import React from \"react\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\n\n//Navbar import\nimport NavBar from './components/navbar';\n\n//Container imports\nimport Landing from './containers/landing';\nimport Stats from './containers/stats';\nimport Settings from './containers/settings';\nimport Categories from './containers/categories';\nimport ActivityComponent from './components/Activity_Page/activity_component';\n\nexport default function Routes() {\n  return (\n    <HashRouter>\n      <Switch>\n          <Route exact path=\"/landing\">\n            <Landing />\n          </Route>\n          <Route exact path=\"/\">\n            <Landing></Landing>\n          </Route>\n          <Route exact path=\"/activities\">\n            <NavBar />\n            <div className=\"page-container\">\n              <ActivityComponent />\n            </div>\n          </Route>\n          <Route exact path=\"/categories\">\n            <NavBar />\n            <div className=\"page-container\">\n              <Categories />\n            </div>\n          </Route>\n          <Route exact path=\"/stats\">\n            <NavBar />\n            <div className=\"page-container\">\n              <Stats />\n            </div>\n          </Route>\n          <Route exact path=\"/settings\">\n            <NavBar />\n            <div className=\"page-container\">\n              <Settings />\n            </div>\n          </Route>\n      </Switch>\n    </HashRouter>\n  );\n}","import './style/bootstrap.css';\nimport './style/custom.css';\n\n\n\n//Componentes\nimport NavBar from './components/navbar';\nimport Routes from \"./Routes\";\nimport UserContext from \"./contexts/user\"\n\n\n\nfunction App() {\n  return (\n      <div>\n        <Routes />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  App from \"./App.js\";\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}